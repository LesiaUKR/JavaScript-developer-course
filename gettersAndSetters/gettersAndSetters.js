/********* Гетери й сетери для управління доступом до об’єкта *********/

// Ви можете отримати значення з об’єкта та встановити
// значення властивості всередині об’єкта.

// Ці дії називають гетерами й сетерами.

// Гетери повертають(отримують) значення приватної змінної
// об’єкта користувачу, але користувач не має прямого
// доступу до приватної змінної.

// Сетери змінюють(встановлюють) значення приватної змінної
// об’єкта на основі значення, переданого до сетера.
// Ця зміна може потребувати обчислень або навіть
// повністю перезаписати попереднє значення.

class Book {
  constructor(author) {
    this._author = author;
  }
  // getter
  get writer() {
    return this._author;
  }
  // setter
  set writer(updatedAuthor) {
    this._author = updatedAuthor;
  }
}
const novel = new Book('anonymous');
console.log(novel.writer);
novel.writer = 'newAuthor';
console.log(novel.writer);

// Консоль показуватиме рядки anonymous та newAuthor.

// Зверніть увагу на синтаксис для виклику гетерів й сетерів.
// Вони навіть не схожі на функції.Гетери і сетери важливі,
// оскільки вони приховують внутрішні деталі реалізації.

// Примітка: згідно з конвенцією перед назвою приватної змінної
// ставиться підкреслення(_).Однак це не робить змінну приватною.

/**** Task 1 ****/

// Використайте ключове слово class, щоб створити клас Thermostat.
// constructor приймає температуру в градусах Фаренгейта.

// У класі створіть getter, щоб отримати температуру в градусах Цельсія,
// та setter, що приймає температуру в градусах Цельсія.

// Пам’ятайте, що C = 5 / 9 * (F - 32) та F = C * 9.0 / 5 + 32,
// де F є значенням температури за Фаренгейтом, а C є значенням за Цельсієм.

// Примітка: під час реалізації ви відстежуватимете температуру в
// межах класу за шкалою Фаренгейта або Цельсія.

// У цьому сила гетерів й сетерів.Ви створюєте API для іншого користувача,
// який може отримати правильний результат, незалежно від того,
// що саме ви досліджуєте.

// Іншими словами, ви приховуєте деталі реалізації від користувача.

/**** Solution ****/

class Thermostat {
  constructor(fahrenheitTemp) {
    this.fahrenheitTemp = fahrenheitTemp;
  }

  get temperature() {
    return (5 / 9) * (this.fahrenheitTemp - 32);
  }
  set temperature(celsiusTemp) {
    return (this.fahrenheitTemp = (celsiusTemp * 9.0) / 5 + 32);
  }
}

const thermos = new Thermostat(76); // Налаштування у шкалі Фаренгейта
console.log(thermos);
let temp = thermos.temperature; // 24.44 градусів за Цельсієм
console.log(temp);
thermos.temperature = 26;
temp = thermos.temperature; // 26 градусів за Цельсієм
console.log(temp);
