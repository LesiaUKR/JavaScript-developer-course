// const elements = {
//   list: document.querySelector('.js-list'),
// };

// serviceGetQuestions()
//   .then(
//     data => console.log(data)
//     //  elements.list.insertAdjacentHTML('beforeend', createMarkup(data))
//   )
//   .catch(err => console.log(err));

// function createMarkup(arr) {
//   return arr
//     .map(
//       ({ _id, name, phone, email, comment }) => `
//       <li class="card" data-id="${_id}">
//       <div class="card-content">
//           <h2 class="card-name">Name: ${name}</h2>
//           <div>Phone: <span class="card-phone">${phone}</span></div>
//           <div>Email: <span class="card-email"> ${email}</span></div>
//           <div> <span class="card-comment">${comment}</span></div>
//       </div>
//   </li>
//   `
//     )
//     .join('');
// }

// function serviceGetQuestions() {
//   const options = {
//     method: 'GET',
//   };

//   return fetch('http://127.0.0.1:5500/api/getAll', options).then(resp => {
//     if (!resp.ok) {
//       throw new Error('Fail üò•');
//     }

//     return resp.json();
//   });
// }

// —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ —Å–∞–º–∞ —Å–µ–±–µ –≤–∏–∫–ª–∏–∫–∞—î - IIFE
// https://developer.mozilla.org/ru/docs/Glossary/IIFE
// IIFE - –∫–æ–ª–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥—ñ–ª—è—Ç–∏ –∫–æ–º—ñ—Ä–∫—É –ø–µ–≤–Ω–æ–≥–æ —Ä–æ–∑–º—ñ—Ä—É –≤ –ø–∞–º'—è—Ç—ñ
// —Ç–æ–±—Ç–æ –∫–æ–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É —ñ Garbage collector
// –ø—ñ–¥—á–∏—â–∞—î —ó—ó —â–æ–π–Ω–æ –≤–∏–∫–æ–Ω–∞–ª–∞—Å—å
// –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ —Å–ø—ñ–Ω–Ω–µ—Ä (–ª–æ–∞–¥–µ—Ä), —Ç–æ
// –≤–∫–∞–∑—É—î–º–æ –π–æ–≥–æ –ø–µ—Ä–µ–¥ fetch, —Ç–æ–±—Ç–æ –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º –Ω–∞ –±–µ–∫

(function () {
  const options = {
    method: 'GET',
  };

  // spinner.start - –ø—Ä–∏–∫–ª–∞–¥ –º—ñ—Å—Ü—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ø—ñ–Ω–µ—Ä—É
  return fetch('http://127.0.0.1:3000/api/getAll', options).then(resp => {
    if (!resp.ok) {
      throw new Error('Fail üò•');
    }

    return resp.json();
  });
})()
  .then(data =>
    elements.list.insertAdjacentHTML('beforeend', createMarkup(data))
  )
  .catch(err => console.log(err));
// .finally(()=>spinner.stop()) - –ø—Ä–∏–∫–ª–∞–¥ –º—ñ—Å—Ü—è –∑—É–ø–∏–Ω–∫–∏ —Å–ø—ñ–Ω–µ—Ä—É
